      SUBROUTINE BESY(X,N,BY,BYPRIM,SUBNAM,IER)
C        SUBROUTINE BESY
C
C SOFTWARE ID : V070
C
C
C AUTHOR :    UNKNOWN
C
C DATE : UNKNOWN
C
C
C DATED REVISIONS :
C 11/17/87 S. L. SKILES ADDED ERROR CHECK FOR ORDER OF Y BESSEL FUNCTION
C          BEING NEGATIVE BY CALLING ERRMSG(2) WHEN IER = 1
C
C 11/17/87 S. L. SKILES WHEN IER = 3 SET : BY = YC INSTEAD OF
C          BY = NOTHING
C
C  4/1/91  B.E. PRUITT RECURSION ROUTINE DONE USING DO LOOP.  PROGRAM
C          CALCULATES NOW CALCULATES Y-BESSEL FUNCTION AND ITS 
C          DERIVATIVE.  Y-BESSEL FUNCTION NOW STORED IN AN ARRAY.
C
C  8/15/91 B. E. PRUITT CHANGED ERROR CHECK FOR ORDER AND ARGUMENT OF
C          BESSEL FUNCTION SO THEY ARE PRINTED OUT IN THIS ROUTINE.
C
C  8/15/91 B. E. PRUITT WHEN IER = 3 SET BY= Y(K) AND 
C          BYPRIM=0.5*(Y(N-1)-Y(N+1)). 
C$
C -------------------------------------------------------------------
C
C PURPOSE: COMPUTE THE Y BESSEL FUNCTION FOR A GIVEN ARGUMENT AND ORDER
C          COMPUTE THE Y BESSEL FUNCTION DERIVATIVE ALSO
C
C FORM OF CALL:
C           CALL BESY(X,N,BY,IER)
C
C
C ARGUMENT LIST  :
C           X  -     THE ARGUMENT OF THE Y BESSEL FUNCTION DESIRED
C           N  -     THE ORDER OF THE Y BESSEL FUNCTION DESIRED
C           BY -     THE RESULTANT Y BESSEL FUNCTION
C           BYPRIM - THE RESULTANT DERIVATIVE OF THE Y BESSEL FUNCTION
C           SUBNAM - CALLING SUBROUTINE'S NAME. IDENTIFIES WHERE ERROR
C                    IS FOR IER=1,2,4.
C           IER-     RESULTANT ERROR CODE WHERE
C              IER=0  NO ERROR
C              IER=1  N IS NEGATIVE
C              IER=2  X IS NEGATIVE OR ZERO
C              IER=3  BY HAS EXCEEDED MAGNITUDE OF 10**70 (NO ERROR 
C                     MESSAGE WRITTEN OUT IN THE PROGRAM).
C              IER=4  N IS OUT OF RANGE (MAXIMUM N IS 1029)
C
C INPUT: UNKNOWN
C
C
C OUTPUT: UNKNOWN
C
C
C METHOD:
C           RECURRENCE RELATION AND POLYNOMIAL APPROXIMATION TECHNIQUE
C           AS DESCRIBED BY A.J.M.HITCHCOCK,'POLYNOMIAL APPROXIMATIONS
C           TO BESSEL FUNCTIONS OF ORDER ZERO AND ONE AND TO RELATED
C           FUNCTIONS', M.T.A.C., V.11,1957,PP.86-88, AND G.N. WATSON,
C           'A TREATISE ON THE THEORY OF BESSEL FUNCTIONS', CAMBRIDGE
C           UNIVERSITY PRESS, 1958, P. 62
C
C
C IDIOSYNCRASIES : UNKNOWN
C
C
C REMARKS :
C           VERY SMALL VALUES OF X MAY CAUSE THE RANGE OF THE LIBRARY
C           FUNCTION ALOG TO BE EXCEEDED
C           X MUST BE GREATER THAN ZERO
C           N MUST BE GREATER THAN OR EQUAL TO ZERO AND LESS THAN 1029
C -------------------------------------------------------------------
C$
C**********************************************************************
C     ..................................................................
C
C
C     CHECK FOR ERRORS IN N AND X
C
      IMPLICIT REAL*8 (A - H , O - Z )
      CHARACTER*6 SUBNAM
      DIMENSION Y(0:1030)
C
      BY=0.0D0
      BYPRIM=0.0D0
      IER=0
      IF(N.GT.1029) THEN
      IER=4
C
        WRITE(3,100)SUBNAM,N,X
 100  FORMAT(1X,//,
     &20X,'* *  F  A  T  A  L      E  R  R  O  R  * *',///,
     &16X,'ORDER, N OF THE Y BESSEL FUNCTION IS OUT OF'//
     &16X,'RANGE WHILE BEING CALLED FROM SUBROUTINE ',A6,//,
     &16X,'N=',I4,' X=',D10.4,//,
     &16X,'PROGRAM WILL BE TERMINATED.',//,
     &16X,'SEE PROJECT MANAGER OR PROGRAMMER ANALYST FOR HELP',
     &//)
         STOP   
C    
          ENDIF
      IF(N.LT.0) THEN
      IER=1
C
      WRITE(3,200)SUBNAM,N,X
 200  FORMAT(1X,//,
     &20X,'* *  F  A  T  A  L      E  R  R  O  R  * *',///,
     &16X,'ORDER, N OF THE Y BESSEL FUNCTION IS NEGATIVE',//,
     &16X,'WHILE BEING CALLED FROM SUBROUTINE ',A6,//,
     &16X,'N=',I4,' X=',D10.4,//,
     &16X,'PROGRAM WILL BE TERMINATED.',//,
     &16X,'SEE PROJECT MANAGER OR PROGRAMMER ANALYST FOR HELP',
     &//)
      STOP
C
          ENDIF
      if(X.LE.0.0D0) THEN
      IER=2
C
      WRITE(3,300)SUBNAM,N,X
 300  FORMAT(1X,//,
     &20X,'* *  F  A  T  A  L      E  R  R  O  R  * *',///,
     &16X,'ARGUMENT, X OF THE Y BESSEL FUNCTION IS NEGATIVE OR ZERO',//
     &16X,'WHILE BEING CALLED FROM SUBROUTINE ',A6,//
     &16X,'N=',I4,' X=',D10.4,//,
     &16X,'PROGRAM WILL BE TERMINATED.',//
     &16X,'SEE PROJECT MANAGER OR PROGRAMMER ANALYST FOR HELP',
     &//)
      STOP
          ENDIF
C
C     BRANCH IF X LESS THAN OR EQUAL 4
C
   20 IF(X-4.0)40,40,30
C
C       COMPUTE Y0 AND Y1 FOR X GREATER THAN 4
C
   30 T1=4.0/X
      T2=T1*T1
      P0=((((-.0000037043D+00*T2+.0000173565D+00)*T2-.0000487613D+00)*T2
     1  +.00017343D+00)*T2-.001753062D+00)*T2+.3989423D+00
      Q0=((((.0000032312D+00*T2-.0000142078D+00)*T2+.0000342468D+00)*T2
     1  -.0000869791D+00)*T2+.0004564324D+00)*T2-.01246694D+00
      P1=((((.0000042414D+00*T2-.0000200920D+00)*T2+.0000580759D+00)*T2
     1  -.000223203D+00)*T2+.002921826D+00)*T2+.3989423D+00
      Q1=((((-.0000036594D+00*T2+.00001622D+00)*T2-.0000398708D+00)*T2
     1  +.0001064741D+00)*T2-.0006390400D+00)*T2+.03740084D+00
      A=2.0/DSQRT(X)
      B=A*T1
      C=X-.7853982D+00
      Y0=A*P0*DSIN(C)+B*Q0*DCOS(C)
      Y1=-A*P1*DCOS(C)+B*Q1*DSIN(C)
      GO TO 90
C
C       COMPUTE Y0 AND Y1 FOR X LESS THAN OR EQUAL TO 4
C
   40 XX=X/2.
      X2=XX*XX
      T=DLOG(XX)+.5772157D+00
      SUM=0.0D+00
      TERM=T
      Y0=T
      DO 70 L=1,15
      IF(L-1)50,60,50
   50 SUM=SUM+1./FLOAT(L-1)
   60 FL=L
      TS=T-SUM
      TERM=(TERM*(-X2)/FL**2)*(1.-1./(FL*TS))
   70 Y0=Y0+TERM
      TERM = XX*(T-.5)
      SUM=0.0D+00
      Y1=TERM
      DO 80 L=2,16
      SUM=SUM+1./FLOAT(L-1)
      FL=L
      FL1=FL-1.
      TS=T-SUM
      TERM=(TERM*(-X2)/(FL1*FL))*((TS-.5/FL)/(TS+.5/FL1))
   80 Y1=Y1+TERM
      PI2=.6366198D+00
      Y0=PI2*Y0
      Y1=-PI2/X+PI2*Y1
C
C     CHECK IF Y0 IS DESIRED
C
   90 continue
      IF(N.EQ.0) THEN
C
C     RETURN Y0 AND Y0 PRIME
C
      BY=Y0
      BYPRIM=(-1.0D0*Y1)
      GO TO 170
          ENDIF
C
C    PERFORM RECURRENCE OPERATIONS TO FIND YN(X)
C
  130 continue
      Y(0)=Y0
      Y(1)=Y1
      DO 145 K=1,N
      T=FLOAT(2*K)/X
      Y(K+1)=T*Y(K)-Y(K-1)
      IF(DABS(Y(K+1))-1.7E33)145,145,141
  141 IER=3
      BY=Y(K)
      BYPRIM=0.5*(Y(K-1)-Y(K+1))
      GO TO 170
  145 CONTINUE
  150 BY=Y(N)
      BYPRIM=0.5*(Y(N-1)-Y(N+1))
  170 RETURN
      END
